version: '3.8'

services:
  # Web UI Application
  webapp:
    build:
      context: .
      dockerfile: docker/Dockerfile.webapp
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    command: gunicorn --bind 0.0.0.0:8000 app.ui.app:app

  # YouTube API Monitoring Service
  youtube-monitor:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - mongodb
    command: python -m app.api.youtube_monitor

  # Celery Workers
  celery-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - mongodb
      - redis
    command: celery -A app.workers.celery_app worker --loglevel=info

  # Celery Flower (monitoring)
  celery-flower:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - celery-worker
    command: celery -A app.workers.celery_app flower

  # Apache Airflow
  airflow-webserver:
    image: apache/airflow:2.5.3
    command: webserver
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./app/airflow/dags:/opt/airflow/dags
      - ./app/airflow/plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-init
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.5.3
    command: scheduler
    env_file:
      - .env
    volumes:
      - ./app/airflow/dags:/opt/airflow/dags
      - ./app/airflow/plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-init
    restart: always

  airflow-init:
    image: apache/airflow:2.5.3
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com'
    env_file:
      - .env
    volumes:
      - ./app/airflow/dags:/opt/airflow/dags
      - ./app/airflow/plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
    restart: on-failure

  # MongoDB Service
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=
      - MONGO_INITDB_ROOT_PASSWORD=

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  # Redis for Celery Backend
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  mongodb-data:
  rabbitmq-data:
  redis-data: 